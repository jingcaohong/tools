<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <properties resource="mybatis-generator-config.properties" />

    <!-- 一个数据库一个context -->
    <context id="database" defaultModelType="flat" targetRuntime="MyBatis3">
        <!-- content 子元素配置顺序必须是property*,plugin*,commentGenerator,jdbcConnection,javaTypeResolver,javaModelGenerator,sqlMapGenerator,javaClientGenerator,table -->
        <property name="beginningDelimiter" value="`" />
        <property name="endingDelimiter" value="`" />
        <property name="autoDelimitKeywords" value="false" />
        <property name="javaFileEncoding" value="UTF-8" />
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter" />
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter" />

        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper" />
            <property name="caseSensitive" value="false" />
        </plugin>

        <commentGenerator>
            <!-- 是否取消注释 -->
            <property name="suppressAllComments" value="false" />
            <!-- 是否生成注释代时间戳 -->
            <property name="suppressDate" value="false" />
        </commentGenerator>

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="${datasource.driver-class-name}" connectionURL="${datasource.url}"
                        userId="${datasource.username}" password="${datasource.password}" />

        <!-- 类型转换 -->
        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <!-- 是否使用BigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <!-- true:使用BigDecimal对应DECIMAL和 NUMERIC数据类型 -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="${domain.target.package}"
                            targetProject="src/main/java">
            <!-- 是否在当前路径下新加一层schema,eg：fase:com.net.lnk.spring.mybatis.generator.model, true:com.net.lnk.spring.mybatis.generator.model.[schemaName] -->
            <property name="enableSubPackages" value="false" />
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!-- 生成mapper xml文件 -->
        <sqlMapGenerator targetPackage="mybatis-mapper" targetProject="src/main/resources">
            <!-- 是否在当前路径下新加一层schema -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!-- 生成mapper xml对应interface,也就是接口dao -->
        <!-- type 1.ANNOTATEDMAPPER：会使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML； 2.MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，会生成XML；
            3.XMLMAPPER：会生成Mapper接口，接口完全依赖XML； 如果context targetRuntime是MyBatis3Simple则只支持ANNOTATEDMAPPER和XMLMAPPER -->
        <javaClientGenerator targetPackage="${mapper.target.package}"
                             targetProject="src/main/java" type="XMLMAPPER">
            <!-- 是否在当前路径下新加一层schema,eg：fase:com.net.lnk.spring.mybatis.generator.dao, true:com.net.lnk.spring.mybatis.generator.dao.[schemaName] -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>

        <!-- 配置表信息,必须要有table元素 -->
        <table tableName="qa_answer" domainObjectName="QaAnswer"
               enableSelectByExample="false" enableDeleteByExample="false" enableCountByExample="false"
               enableUpdateByExample="false" selectByExampleQueryId="false">
            <!-- true:生成的model类会直接使用column本身的名字，而不会使用驼峰命名方法 -->
            <property name="useActualColumnNames" value="false" />

            <!-- generatedKey用于生成主键，如果设置了该元素，MBG会在生成的<insert>元素中生成一条正确的<selectKey>元素 -->
            <generatedKey column="id" sqlStatement="JDBC" />
        </table>
        <table tableName="qa_answer_evaluate" domainObjectName="QaAnswerEvaluate"
               enableSelectByExample="false" enableDeleteByExample="false" enableCountByExample="false"
               enableUpdateByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false" />
            <generatedKey column="id" sqlStatement="JDBC" />
        </table>
        <table tableName="qa_category" domainObjectName="QaCategory"
               enableSelectByExample="false" enableDeleteByExample="false" enableCountByExample="false"
               enableUpdateByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false" />
            <generatedKey column="id" sqlStatement="JDBC" />
        </table>
        <table tableName="qa_comment " domainObjectName="QaComment"
               enableSelectByExample="false" enableDeleteByExample="false" enableCountByExample="false"
               enableUpdateByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false" />
            <generatedKey column="id" sqlStatement="JDBC" />
        </table>
        <table tableName="qa_question" domainObjectName="QaQuestion"
               enableSelectByExample="false" enableDeleteByExample="false" enableCountByExample="false"
               enableUpdateByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false" />
            <generatedKey column="id" sqlStatement="JDBC" />
        </table>
        <table tableName="qa_question_evaluate " domainObjectName="QaQuestionEvaluate"
               enableSelectByExample="false" enableDeleteByExample="false" enableCountByExample="false"
               enableUpdateByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false" />
            <generatedKey column="id" sqlStatement="JDBC" />
        </table>
    </context>
</generatorConfiguration>